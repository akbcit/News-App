// Importing SCSS variables and placeholders globally
@use "variables" as *;
@use "placeholders" as *;

.featured-article {
  // Extending a shared flex column center style from placeholders
  @extend %flex-column-center;
  justify-content: flex-end;
  box-shadow: 2px 1px 15px 0px $box-shadow-color; // Using a variable for the box-shadow color
  border-radius: 0 0 10px 10px;
  overflow: hidden;
  height: 27rem;
  background-image: var(--articleBgImage);
  background-position: center center;
  background-size: cover;
  color: $secondary-color; // Using a variable for text color
  transition: $base-transition; // Using a variable for transition
  max-width: 100vw;
  min-width: 100%;

  // Media query using SCSS syntax for responsive design
  @media (min-width: 1024px) {
    height: 35rem;
  }

  &-content {
    background-color: rgba(41, 41, 41, 0.8);
    // Extending the same shared style as the parent
    @extend %flex-column-center;
    justify-content: center;
    padding: 10px;
    width: 100%;
    transition: height 0.5s ease-out;
    overflow: hidden;

    // SCSS nested selector with class modifier
    &.full {
      height: 50%;
      max-height: 100%;
    }

    // Another nested selector with class modifier
    &.half {
      height: auto;
      max-height: 50%;
    }

    // Nested selector targeting a specific child
    .article-headline {
      text-align: center;

      // Responsive design media query within a nested selector
      @media (max-width: 700px) {
        font-size: large;
      }
    }

    .article-excerpt {
      text-align: left;
      margin-bottom: 10px;

      // Media query nested within a nested selector
      @media (min-width: 1024px) {
        font-size: large;
      }
    }

    .article-details {
      margin-bottom: 10px;
      color: $secondary-color; // Using a variable for color

      // Nested selector with pseudo-class
      &.visible :first-child {
        margin-right: 1rem;
      }
    }

    .article-tags .article-tag {
      color: rgb(255, 255, 255);
      background-color: black;
    }
  }

  .category-and-expand-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    margin-left: -20px;
  }

  .expand-icon {
    height: 30px;
    transition: transform 0.3s ease;

    // Nested selectors with class modifiers for style changes
    &.up {
      transform: rotate(0deg);
    }

    &.down {
      transform: rotate(180deg);
    }
  }

  .invisible {
    opacity: 0;
    transition: max-height 0.5s linear;
    height: 0;
  }

  .visible {
    opacity: 1;
    transition: height 0.5s linear;
  }
}
// Media query outside of a selector for global style changes
@media (max-width: 400px) {
  .featured-article-content.full {
    height: 55%;
  }
}
